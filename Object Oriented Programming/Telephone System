/* Telephone Program */

/* Note: each class has different java files */


// Parent Class: Telephone

class Telephone {
    private String manufacturer;
    private String network;
    private int countryCode;
    private int areaCode; 
    private long number;

    // Constructor for Telephone class 
    public Telephone(String manufacturer, String network, int countryCode, int areaCode, long number) {
        this.manufacturer = manufacturer;
        this.network = network;
        this.countryCode = countryCode;
        this.areaCode = areaCode;
        this.number = number;
    }

    // Accessors for Telephone attributes

    // Get the manufacturer of the telephone
    public String getManufacturer() {
        return manufacturer;
    }

    // Get the network of the telephone
    public String getNetwork() {
        return network;
    }

    // Get the country code of the telephone
    public int getCountryCode() {
        return countryCode;
    }

    // Get the area code of the telephone
    public int getAreaCode() {
        return areaCode;
    }

    // Get the number of the telephone
    public long getNumber() {
        return number;
    }
}

// Subclass: SmartFone
class SmartFone extends Telephone {
    private String owner;
    private String color;

    // Constructor for SmartFone class 
    public SmartFone(String manufacturer, String network, int countryCode, int areaCode, long number, String owner, String color) {
        super(manufacturer, network, countryCode, areaCode, number);
        this.owner = owner;
        this.color = color;
    }

    // Accessors for SmartFone attributes

    // Get the owner of the SmartFone
    public String getOwner() {
        return owner;
    }

    // Get the color of the SmartFone
    public String getColor() {
        return color;
    }

    // Methods specific to SmartFone

    // Make a call to a specified number
    public void call(long number) {
        System.out.println("Calling " + number + "...");
    }

    // Receive a call from a specified number
    public void receive(long number) {
        System.out.println("Accepting call from " + number + "...");
    }

    // Reject a call from a specified number
    public void reject(long number) {
        System.out.println("Incoming call from " + number + " rejected..");
    }

    // Install an application on the SmartFone
    public void installApplication(String appName) {
        System.out.println("Installing " + appName);
    }

    // Uninstall an application from the SmartFone
    public void uninstallApplication(String appName) {
        System.out.println("Uninstalling " + appName);
    }
}


// Main Class: FoneMain
public class FoneMain {
    public static void main(String[] args) {
        // Creating a SmartFone object with specified attributes
        SmartFone myPhone = new SmartFone("Apple", "TM", 63, 8888, 9976876779L, "Name Surname", "Rose Gold");

        // Print Attributes
        printCenteredTitle("Attributes");
        System.out.printf("%-20s %s\n", "Manufacturer:", myPhone.getManufacturer());
        System.out.printf("%-20s %s\n", "Network:", myPhone.getNetwork());
        System.out.printf("%-20s +%d\n", "Country Code:", myPhone.getCountryCode());
        System.out.printf("%-20s %d\n", "Phone Number:", myPhone.getNumber());
        System.out.printf("%-20s %d\n", "Area Code:", myPhone.getAreaCode());
        System.out.printf("%-20s %s\n", "Owner:", myPhone.getOwner());
        System.out.printf("%-20s %s\n\n", "Color:", myPhone.getColor());

        // Telephone Actions
        printCenteredTitle("Telephone Actions");
        myPhone.call(9396046779L);
        myPhone.receive(9084037989L);
        myPhone.reject(9287654099L);
        System.out.println();

        // SmartFone Actions
        printCenteredTitle("SmartFone Actions");
        myPhone.installApplication("LinkedIn");
        myPhone.uninstallApplication("Tiktok");
    }

    // Method to print a centered title
    public static void printCenteredTitle(String title) {
        int titleWidth = 39; // Width of the title section
        int titleLength = title.length();
        int spaces = (titleWidth - titleLength) / 2; // Calculate spaces to center the title
        StringBuilder centeredTitle = new StringBuilder();

        // Add spaces to center the title
        for (int i = 0; i < spaces; i++) {
            centeredTitle.append(" ");
        }

        // Append the title to the centeredTitle StringBuilder
        centeredTitle.append(title);

        // Print the formatted title
        System.out.println("+-----------------------------------+");
        System.out.println(centeredTitle.toString());
        System.out.println("+-----------------------------------+");
    }
}
